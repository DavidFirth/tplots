% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ternary_viewport.R
\name{ternary_viewport}
\alias{ternary_viewport}
\title{Make a Square Viewport for a Ternary Plot}
\usage{
ternary_viewport(
  width = grid::unit(1, "snpc"),
  corner = c(0, 0),
  scale = 1,
  ...
)
}
\arguments{
\item{width}{the width of the viewport (whose height will be the same).}

\item{corner}{one of \code{c(0, 0)}, \code{c(1, 0)}, \code{c(0, 1)}, \code{c(1, 1)}, specifying the orientation of ternary objects to be drawn in the viewport.}

\item{scale}{a strictly positive number (usually greater than or equal to 1), to specify the size of the viewport relative to ternary objects drawn inside the viewport.  If the value is 1, then all ternary objects will have the same width and height as the viewport.}

\item{...}{other arguments to be passed to \code{\link[grid:viewport]{grid::viewport()}}.}
}
\value{
A viewport object.
}
\description{
This function creates a viewport with fixed aspect ratio, suitable for drawing a ternary plot or a tetraplot.  The arguments give control over orientation and scaling of the plot.
}
\details{
This is a simple wrapper for a call to \code{\link[grid:viewport]{grid::viewport()}}, which produces a square viewport whose \code{xscale} and \code{yscale} components are determined by \code{corner} and \code{scale}.  Ternary plots can be drawn in such a viewport with one of four orientations, specified by the viewport corner towards which one of the ternary plot's vertices will point.  Ternary plots are drawn at a size specified by the reciprocal of \code{scale}, relative to the width of the viewport; the position of the centroid of the triangle remains fixed under scaling.
}
\examples{
## Two viewports that differ only in the value of `scale`.
## The square boundary of both viewports is the same (shown in green).

# The first viewport, oriented towards top right, is made through a call to tplot_new():
tplot_new(corner = c(1, 1))
grid::grid.rect(gp = grid::gpar(col = "green", lwd = 10))
grid::grid.draw(ternary_frame())
# The second viewport has the same orientation, corner = c(1, 1), but now scale > 1:
grid::pushViewport(ternary_viewport(corner = c(1, 1), scale = 1.2))
grid::grid.draw(ternary_frame(gp = grid::gpar(lty = "dashed")))

}
\author{
David Firth
}
